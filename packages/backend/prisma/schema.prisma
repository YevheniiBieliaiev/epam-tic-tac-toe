// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator erd {
  provider = "prisma-erd-generator"
  includeRelationFromFields = true
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String             @id @default(uuid()) @db.Uuid
  email              String             @unique @db.VarChar(256)
  nickname           String             @db.VarChar(40)
  avatar             String?            @db.VarChar(2048)
  role               Role               @default(USER)
  salt               String             @db.VarChar(256)
  passwordHash       String             @db.VarChar(256)
  tokenEmail         String?            @db.VarChar(6)
  isActivated        Boolean            @default(false)
  refreshTokens      RefreshToken[]
  passwordUpdatedAt  DateTime?
  gameBotStat        GameBotStat?
  gameUserStat       GameUserStat?
  createdAt          DateTime           @default(now())
  updatedAt          DateTime           @updatedAt
}

model RefreshToken {
  id                 String             @id @default(uuid()) @db.Uuid
  user               User               @relation(fields: [userId], references: [id])
  userId             String             @db.Uuid
  token              String
  createdAt          DateTime           @default(now())
  updatedAt          DateTime           @updatedAt
}

model GameBotStat {
  id                String              @id @default(uuid()) @db.Uuid
  user              User                @relation(fields: [userId], references: [id])
  userId            String              @unique @db.Uuid
  won               Int                 @default(0)
  drow              Int                 @default(0)
  robotWon          Int                 @default(0)
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
}

model GameUserStat {
  id                String              @id @default(uuid()) @db.Uuid
  user              User                @relation(fields: [userId], references: [id])
  userId            String              @unique @db.Uuid
  won               Int                 @default(0)
  drow              Int                 @default(0)
  lose              Int                 @default(0)
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
}

enum Role {
  USER
  ADMIN
}
